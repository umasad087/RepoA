name: Main Pipeline

on:
  workflow_dispatch:
    inputs:
      repo:
        description: 'Developer repository'
        required: true
      branch:
        description: 'Branch to build'
        required: true

jobs:
  clone-and-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repoDev code
        uses: actions/checkout@v2
        with:
          repository: ${{ github.event.inputs.repo }}
          ref: ${{ github.event.inputs.branch }}

      - name: Perform Code and OSS Snyk Scans
        run: echo "Performing initial scans..."
        # Replace this with actual scan commands

      - name: Read config for build pipeline
        id: config-build
        run: echo "include-build-pipeline=true"  # Simulate reading config
        # Implement actual logic to decide if the build should proceed

      - name: Trigger repoDev build pipeline if condition is met
        if: ${{ steps.config-build.outputs.include-build-pipeline == 'true' }}
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/${{ github.event.inputs.repo }}/dispatches
          type: build
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

  image-scan:
    needs: clone-and-scan
    runs-on: ubuntu-latest
    steps:
      - name: Perform Image Snyk Scans
        run: echo "Performing image scans..."
        # Add actual image scan commands here

      - name: Read config for deploy pipeline
        id: config-deploy
        run: echo "include-deploy-pipeline=true"  # Simulate reading config
        # Implement actual logic to decide if deployment should proceed

      - name: Trigger repoDev deploy pipeline if condition is met
        if: ${{ steps.config-deploy.outputs.include-deploy-pipeline == 'true' }}
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/${{ github.event.inputs.repo }}/dispatches
          type: deploy
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

  finish:
    needs: image-scan
    runs-on: ubuntu-latest
    steps:
      - name: End Main Pipeline
        run: echo "Main pipeline execution complete."
